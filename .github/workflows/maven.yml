# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout project
      uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install --no-transfer-progress -B -V
    - name: Archive build results
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: target
        continue-on-error: true
  
  docker-build:
  
    needs:
     - build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout project
      uses: actions/checkout@v3
    - name: Download ranger artifacts
      uses: actions/download-artifact@v3
      with:
        name: artifacts
    - name: Build Ranger Docker Image
      run: |
        cp ranger-* dev-support/ranger-docker/dist/
        cp version dev-support/ranger-docker/dist/
        cd dev-support/ranger-docker/
        chmod +x download-archives.sh && ./download-archives.sh
        export DOCKER_BUILDKIT=1
        export COMPOSE_DOCKER_CLI_BUILD=1
        export RANGER_DB_TYPE=postgres
        docker build --no-cache -t ranger-base:latest -f Dockerfile.ranger-base .
        docker build --no-cache -t ranger-db:latest -f Dockerfile.ranger-postgres .
        docker build --no-cache -t ranger-solr:latest -f Dockerfile.ranger-solr .
        docker build --no-cache -t ranger-zk:latest -f Dockerfile.ranger-zk .
        docker build --build-arg RANGER_VERSION=3.0.0-SNAPSHOT --build-arg RANGER_DB_TYPE=${RANGER_DB_TYPE} -t ranger-admin:latest -f Dockerfile.ranger .

